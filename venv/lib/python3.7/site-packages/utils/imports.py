from redbot.core import commands as cmd
from threading import Timer

COLOR = 0xF495BF

class RoleConverter(cmd.RoleConverter):
    def __init__(self):
        super(self.__class__, self).__init__()

    async def convert_(self, ctx: cmd.Context, argument: str):
        try:
            return await self.convert(ctx, argument)
        except:
            return None


class EmojiConverter(cmd.EmojiConverter):
    def __init__(self):
        super(self.__class__, self).__init__()

    async def convert_(self, ctx: cmd.Context, argument: str):
        try:
            return await self.convert(ctx, argument)
        except:
            if len(argument) < 2:
                return argument
            else:
                return None

class TextChannelConverter(cmd.TextChannelConverter):
    def __init__(self):
        super(self.__class__, self).__init__()

    async def convert_(self, ctx: cmd.Context, argument: str):
        try:
            return await self.convert(ctx, argument)
        except:
            return None

class RepeatedTimer(object):
    def __init__(self, interval, function, *args, **kwargs):
        self._timer     = None
        self.function   = function
        self.interval   = interval
        self.args       = args
        self.kwargs     = kwargs
        self.is_running = False
        self.start()

    def _run(self):
        self.is_running = False
        self.start()
        self.function(*self.args, **self.kwargs)

    def start(self):
        if not self.is_running:
            self._timer = Timer(self.interval, self._run)
            self._timer.start()
            self.is_running = True

    def stop(self):
        self._timer.cancel()
        self.is_running = False